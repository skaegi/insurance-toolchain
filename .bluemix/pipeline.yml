---
stages:
- name: BUILD
  inputs:
  - type: git
    branch: master
    service: ${REPO}
  triggers:
  - type: commit
  properties:
  - name: STRIPE_API_KEY
    value: ${STRIPE_API_KEY}
    type: text
  - name: CREDIT_API_KEY
    value: ${CREDIT_API_KEY}
    type: text
  - name: LEADS_API_KEY
    value: ${LEADS_API_KEY}
    type: text
  - name: TWILIO_ACCOUNT_SID
    value: ${TWILIO_ACCOUNT_SID}
    type: text
  - name: TWILIO_ACCOUNT_SECRET
    value: ${TWILIO_ACCOUNT_SECRET}
    type: text
  - name: TWILIO_PHONE_NUMBER
    value: ${TWILIO_PHONE_NUMBER}
    type: text
  - name: BPM_USERNAME
    value: ${BPM_USERNAME}
    type: text
  - name: BPM_PASSWORD
    value: ${BPM_PASSWORD}
    type: text
  jobs:
  - name: Build
    type: builder
    script: |-
      #!/bin/bash
      sed -ie "s/__STRIPE_API_KEY/$STRIPE_API_KEY/" manifest.yml
      sed -ie "s/__CREDIT_API_KEY/$CREDIT_API_KEY/" manifest.yml
      sed -ie "s/__LEADS_API_KEY/$LEADS_API_KEY/" manifest.yml
      sed -ie "s/__TWILIO_ACCOUNT_SID/$TWILIO_ACCOUNT_SID/" manifest.yml
      sed -ie "s/__TWILIO_ACCOUNT_SECRET/$TWILIO_ACCOUNT_SECRET/" manifest.yml
      sed -ie "s/__TWILIO_PHONE_NUMBER/$TWILIO_PHONE_NUMBER/" manifest.yml
      sed -ie "s/__BPM_USERNAME/$BPM_USERNAME/" manifest.yml
      sed -ie "s/__BPM_PASSWORD/$BPM_PASSWORD/" manifest.yml
  - name: Unit Tests
    type: tester
    extension_id: ibm.devops.services.pipeline.dra_upload_results
    APPLICATION_NAME: Insurance-UI
    FORMAT_SELECT: mocha
    LIFE_CYCLE_STAGE_SELECT: unittest
    LOG_FILE: test/mochatest.json
    ENVIRONMENT: DEV
    COMMAND: |
      #!/bin/bash
      npm install
      npm test -- -R json > test/mochatest.json
  - name: DEV Gate
    type: tester
    extension_id: ibm.devops.services.pipeline.dra_devops_gate
    CRITERIA: Unit Test coverage
    APPLICATION_NAME: Insurance-UI
    ENVIRONMENT: DEV
- name: DEPLOY US SOUTH
  inputs:
  - type: job
    stage: BUILD
    job: Build
  triggers:
  - type: stage
  properties:
  - name: CF_APP_NAME
    value: undefined
    type: text
  jobs:
  - name: Deploy
    type: deployer
    target:
      region_id: ${REGION_ID}
      organization: ${ORG_NAME}
      space: ${SPACE_NAME}
      application: ${CF_APP_NAME}
    script: |
      #!/bin/bash
      cf create-service cloudantNoSQLDB Shared cloudant
      # Push app
      if ! cf app $CF_APP; then  
        cf push $CF_APP
      else
        OLD_CF_APP=${CF_APP}-OLD-$(date +"%s")
        rollback() {
          set +e  
          if cf app $OLD_CF_APP; then
            cf logs $CF_APP --recent
            cf delete $CF_APP -f
            cf rename $OLD_CF_APP $CF_APP
          fi
          exit 1
        }
        set -e
        trap rollback ERR
        cf rename $CF_APP $OLD_CF_APP
        cf push $CF_APP
        cf delete $OLD_CF_APP -f
      fi
- name: DEPLOY UK
  inputs:
  - type: job
    stage: BUILD
    job: Build
  triggers:
  - type: stage
  properties:
  - name: CF_APP_NAME
    value: undefined
    type: text
  jobs:
  - name: Deploy
    type: deployer
    target:
      region_id: ${UK_REGION_ID}
      organization: ${UK_ORG_NAME}
      space: ${UK_SPACE_NAME}
      application: ${CF_APP_NAME}
    script: |
      #!/bin/bash
      cf create-service cloudantNoSQLDB Shared cloudant
      # Push app
      if ! cf app $CF_APP; then  
        cf push $CF_APP
      else
        OLD_CF_APP=${CF_APP}-OLD-$(date +"%s")
        rollback() {
          set +e  
          if cf app $OLD_CF_APP; then
            cf logs $CF_APP --recent
            cf delete $CF_APP -f
            cf rename $OLD_CF_APP $CF_APP
          fi
          exit 1
        }
        set -e
        trap rollback ERR
        cf rename $CF_APP $OLD_CF_APP
        cf push $CF_APP
        cf delete $OLD_CF_APP -f
      fi
- name: DEPLOY AUS
  inputs:
  - type: job
    stage: BUILD
    job: Build
  triggers:
  - type: stage
  properties:
  - name: CF_APP_NAME
    value: undefined
    type: text
  jobs:
  - name: Deploy
    type: deployer
    target:
      region_id: ${AUS_REGION_ID}
      organization: ${AUS_ORG_NAME}
      space: ${AUS_SPACE_NAME}
      application: ${CF_APP_NAME}
    script: |
      #!/bin/bash
      cf create-service cloudantNoSQLDB Shared cloudant
      # Push app
      if ! cf app $CF_APP; then  
        cf push $CF_APP
      else
        OLD_CF_APP=${CF_APP}-OLD-$(date +"%s")
        rollback() {
          set +e  
          if cf app $OLD_CF_APP; then
            cf logs $CF_APP --recent
            cf delete $CF_APP -f
            cf rename $OLD_CF_APP $CF_APP
          fi
          exit 1
        }
        set -e
        trap rollback ERR
        cf rename $CF_APP $OLD_CF_APP
        cf push $CF_APP
        cf delete $OLD_CF_APP -f
      fi
